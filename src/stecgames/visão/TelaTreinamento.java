/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stecgames.visão;

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import stecgames.modelo.TurmaTreinamento;
import stecgames.persistencia.TreinamentoDAO;
import stecgames.utilitarios.ApenasNumeros;
import stecgames.utilitarios.ApenasNumerosVirg;
import static stecgames.visão.TelaPrincipal.JdpPrincipal;

/**
 *
 * @author Gustavo
 */
public class TelaTreinamento extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaTreinamento
     */
    public TelaTreinamento() {
        initComponents();
        
        
        
        txtCargaHorariaT.setDocument(new ApenasNumeros());        
        txtValTreinamento.setDocument(new ApenasNumerosVirg());
        txtParcelasT.setDocument(new ApenasNumeros());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtNomeT = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtConteudoT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCargaHorariaT = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtValTreinamento = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtParcelasT = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtObsT = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        txtDataIninioT = new javax.swing.JFormattedTextField();
        txtDataTerminoT = new javax.swing.JFormattedTextField();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Cadastro de Treinamento");

        jLabel2.setText("Empresa");

        jLabel3.setText("Conteudo");

        jLabel4.setText("Carga Horária");

        jLabel5.setText("Data início");

        jLabel6.setText("Valor do Treinamento");

        jLabel7.setText("Parcelas");

        jLabel8.setText("Obs:");

        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cadastrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Cadastro  de Treinamentos");

        jLabel10.setText("Data Término");

        jButton3.setText("Limpar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        try {
            txtDataIninioT.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtDataTerminoT.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jButton3)
                        .addGap(34, 34, 34)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtValTreinamento, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                    .addComponent(txtParcelasT)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtDataTerminoT, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtObsT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(53, 53, 53))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtConteudoT, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCargaHorariaT, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNomeT)
                            .addComponent(txtDataIninioT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jLabel9)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNomeT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtConteudoT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtCargaHorariaT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDataIninioT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDataTerminoT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(txtValTreinamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtParcelasT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtObsT, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
         dispose();   
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        String nomeT;
       String ConteudoT;
       int CargHoraria = 0;
       String dataInT;
       String dataTerT;
       double ValTreinT = 0;
       int QtdParcT = 0; 
       String ObsT;       
       String msgErro = "";
       
       
       
       
       nomeT = txtNomeT.getText();
       
       ConteudoT = txtConteudoT.getText();
       
     
       
       dataInT = txtDataIninioT.getText();
       
       dataTerT = txtDataTerminoT.getText();
      
       
        
       ObsT = txtObsT.getText();
       
       String CargaHorariaAux = txtCargaHorariaT.getText();
       
       String QtdParcelasTAux = txtParcelasT.getText();
       
       String ValTreinamentoTAux = txtValTreinamento.getText();
       
       
       
                                   if(txtNomeT.getText().isEmpty()){
           JOptionPane.showMessageDialog(null, "Prencha o campo nome!"
                    , "Alerta", JOptionPane.WARNING_MESSAGE); 
           txtNomeT.requestFocus();
            return;
        }
                                     
               if(txtConteudoT.getText().isEmpty()){
           JOptionPane.showMessageDialog(null, "Prencha o campo conteudo!"
                    , "Alerta", JOptionPane.WARNING_MESSAGE); 
           txtConteudoT.requestFocus();
            return;
        }    
                                     if(txtCargaHorariaT.getText().isEmpty()){
           JOptionPane.showMessageDialog(null, "Prencha o campo carga horária!"
                    , "Alerta", JOptionPane.WARNING_MESSAGE); 
           txtCargaHorariaT.requestFocus();
            return;            
        }
             if (dataInT.equals("") && dataTerT.equals("")){
                 
             } else 
            if (dataInT.equals("  /  /    ")) {
                msgErro = "Preencha o campo data inicio antes de continuar.";
                JOptionPane.showMessageDialog(null, msgErro);                         
                 } else 
            if (dataTerT.equals("  /  /    ")) {
                msgErro = "Preencha o campo data termino antes de continuar.";
                JOptionPane.showMessageDialog(null, msgErro);  
                
            }else {                       
       
                                                     if(txtValTreinamento.getText().isEmpty()){
           JOptionPane.showMessageDialog(null, "Prencha o campo valor do treinamento!"
                    , "Alerta", JOptionPane.WARNING_MESSAGE); 
           txtValTreinamento.requestFocus();
            return;
        }
                                                     if(txtParcelasT.getText().isEmpty()){
           JOptionPane.showMessageDialog(null, "Prencha o campo quantidade de parcelas!"
                    , "Alerta", JOptionPane.WARNING_MESSAGE); 
           txtParcelasT.requestFocus();
            return;
        }
              
            }
      
     
       String expAno = txtDataIninioT.getText();
        int expano =0;  
        if (!expAno.isEmpty()){
        expAno = expAno.substring(6, expAno.length());
        expano = Integer.parseInt(expAno);
        }
        
        if(expano>2021){
           JOptionPane.showMessageDialog(null, "Cadastros de Treinamento só ate o ano de 2021!"
                    , "Alerta", JOptionPane.WARNING_MESSAGE); 
            txtDataIninioT.requestFocus();
            return;
        
        }
        
        if(expano<2017){
           JOptionPane.showMessageDialog(null, "Cadastros de Treinamento a partir do ano de 2017!"
                    , "Alerta", JOptionPane.WARNING_MESSAGE); 
            txtDataIninioT.requestFocus();
            return;
        }
        
        String expMes = txtDataIninioT.getText();
        String expDia = txtDataIninioT.getText();
        int expmes = 0;
        int expdia = 0;
        //Subtrai 3 primeiros caracters e subtrai os 5 ultimos assim deixando somente o mes 
        
        if (!expMes.isEmpty()){
        expMes = expMes.substring(3, expMes.length()-5);
        expmes = Integer.parseInt(expMes);
        }
         if (!expDia.isEmpty()){
        expDia = expDia.substring(0, expDia.length()-8);
        expdia = Integer.parseInt(expDia);
        }
         
         
         //erro aki
        //Validação de ano bi-sexto
        String expanoBi = "";
        if ( ( expano % 4 == 0 && expano % 100 != 0 ) || ( expano % 400 == 0 ) ){
            expanoBi = "anoBi";
        }else{
            expanoBi = "anoNormal";
        }           
        
        switch (expanoBi) {

                case  "anoBi":
                    if(expmes == 02){
                            }if(expdia>31) {
                                JOptionPane.showMessageDialog(null, ""
                                        + " verifique  data de termino está incorreto!"
                                         , "Alerta", JOptionPane.WARNING_MESSAGE); 
                                 txtDataIninioT.requestFocus();
                                 return;
                            }
            break;
                
                
                case  "anoNormal":
                   if(expmes == 02){ 
                        }if(expdia>31){
                           JOptionPane.showMessageDialog(null, "Verifique a data inicio,\n "                           
                           
                            , "Alerta", JOptionPane.WARNING_MESSAGE); 
                           txtDataIninioT.requestFocus();
                return;
             }    
            break;
               
        }
        
        
        
        if(expmes>=13){
            JOptionPane.showMessageDialog(null, "Verifique o mes da data de inicio,\n "
                    + "ele não pode ser maior que 12"
                    , "Alerta", JOptionPane.WARNING_MESSAGE); 
            txtDataIninioT.requestFocus();
            return; 
        }
        
        
        
     
     
        
        //Validação de ano bi-sexto
        
        
        
        //AKI
        
        String auxiliar = txtDataTerminoT.getText();
        int ano =0; 
        if (!auxiliar.isEmpty()){
        auxiliar = auxiliar.substring(6, auxiliar.length());
        ano = Integer.parseInt(auxiliar);
        }
        
        if(ano>2021){
           JOptionPane.showMessageDialog(null, "Cadastros de Treinamento só ate o ano de 2021!"
                    , "Alerta", JOptionPane.WARNING_MESSAGE); 
            txtDataTerminoT.requestFocus();
            return;
        
        }
        
        if(ano<2017){
           JOptionPane.showMessageDialog(null, "Cadastros de Treinamento a partir do ano de 2017!"
                    , "Alerta", JOptionPane.WARNING_MESSAGE); 
            txtDataTerminoT.requestFocus();
            return;
        }
        
        String auxMes = txtDataTerminoT.getText();
        String auxDia = txtDataTerminoT.getText();
        int mes = 0;
        int dia = 0;
        //Subtrai 3 primeiros caracters e subtrai os 5 ultimos assim deixando somente o mes 
        
        if (!auxMes.isEmpty()){
        auxMes = auxMes.substring(3, auxMes.length()-5);
        mes = Integer.parseInt(auxMes);
        }
         if (!auxDia.isEmpty()){
        auxDia = auxDia.substring(0, auxDia.length()-8);
        dia = Integer.parseInt(auxDia);
        }
         
        //Validação de ano bi-sexto
        String anoBi = "";
        if ( ( ano % 4 == 0 && ano % 100 != 0 ) || ( ano % 400 == 0 ) ){
            anoBi = "anoBi";
        }else{
            anoBi = "anoNormal";
        }           
        
        switch (anoBi) {

                case  "anoBi":
                    if(mes == 02){
                            }if(dia>31) {
                                JOptionPane.showMessageDialog(null, ""
                                        + " verifique  data de termino está incorreto!"
                                         , "Alerta", JOptionPane.WARNING_MESSAGE); 
                                 txtDataTerminoT.requestFocus();
                                 return;
                            }
            break;
                
                
                case  "anoNormal":
                   if(mes == 02){ 
                        }if(dia>31){
                           JOptionPane.showMessageDialog(null, "Verifique a data de termino,\n "
                           + ""                           
                            , "Alerta", JOptionPane.WARNING_MESSAGE); 
                           txtDataTerminoT.requestFocus();
                return;
             }    
            break;
               
        }
        
        
        
        if(mes>=13){
            JOptionPane.showMessageDialog(null, "Verifique o mes da data de termino,\n "
                    + "ele não pode ser maior que 12"
                    , "Alerta", JOptionPane.WARNING_MESSAGE); 
            txtDataTerminoT.requestFocus();
            return; 
        }
        
        
         
       
      
      try { 
                         
                                        
                                    CargHoraria = Integer.parseInt(CargaHorariaAux);
                                    QtdParcT = Integer.parseInt(QtdParcelasTAux);
                                   // ValTreinT = Double.parseDouble(ValTreinamentoTAux);
                                      
                                    String ValTreina = ValTreinamentoTAux.replace(",", ".");                                     
            
                                    double valorTreina = Double.parseDouble(ValTreina);
                                

                                   if (nomeT != null) {

                                        TurmaTreinamento turmatreinamento = new TurmaTreinamento();
                                        turmatreinamento.setEmpresa(nomeT);
                                        turmatreinamento.setConteudo(ConteudoT);
                                        turmatreinamento.setCargaHoraria(CargHoraria);
                                        turmatreinamento.setDataInicio(dataInT);
                                        turmatreinamento.setDataTermino(dataTerT);
                                        turmatreinamento.setValorTreinamento(valorTreina);
                                        turmatreinamento.setParcelas(QtdParcT);
                                        turmatreinamento.setObservacao(ObsT);
                                        
                                      /*  try {
                                            
                                            TreinamentoDAO.inserir(turmatreinamento);
                                            int resposta = JOptionPane.showConfirmDialog(null, nomeT + " cadastrado com sucesso!", "Confirmação", JOptionPane.DEFAULT_OPTION);
                                        } catch (Exception ex) {
                                            JOptionPane.showMessageDialog(null, "Empresa já cadastrada");
                                        }*/
                                       
                                      
                                      int resposta = JOptionPane.showConfirmDialog(null, nomeT + " Cadastrado com sucesso! Deseja cadastrar outro?",  "Confirmação", JOptionPane.YES_NO_OPTION);
                                      
                                       if (resposta == JOptionPane.YES_OPTION) {
                                           
                                           TreinamentoDAO.inserir(turmatreinamento);
                                           
                                           txtNomeT.setText("");
                                           txtConteudoT.setText("");
                                           txtCargaHorariaT.setText("");
                                           txtDataIninioT.setText("");
                                           txtDataTerminoT.setText("");
                                           txtValTreinamento.setText("");
                                           txtParcelasT.setText("");
                                           txtObsT.setText("");
                                           
                                           return;
                                       }
                                        
                                         
                                         if (resposta == JOptionPane.YES_OPTION) {
                                        try {   
                                             
                                            TreinamentoDAO.inserir(turmatreinamento);
                                          
                                          
                                           txtNomeT.setText("");
                                           txtConteudoT.setText("");
                                           txtCargaHorariaT.setText("");
                                           txtDataIninioT.setText("");
                                           txtDataTerminoT.setText("");
                                           txtValTreinamento.setText("");
                                           txtParcelasT.setText("");
                                           txtObsT.setText("");
                                              
                                          return;
                                           
                                        } catch (SQLException ex) {
                                           Logger.getLogger(TelaTurmaTreinamento.class.getName()).log(Level.SEVERE, null, ex);
                                         } catch (ClassNotFoundException ex) {
                                            Logger.getLogger(TelaTurmaTreinamento.class.getName()).log(Level.SEVERE, null, ex);
                                       }
                                      } else if (resposta == JOptionPane.NO_OPTION) {
                                          
                                          TreinamentoDAO.inserir(turmatreinamento);
                                          
                                         TelaTurmaTreinamento tela = new TelaTurmaTreinamento();
                                               
                                                 JdpPrincipal.add(tela);
                                                 tela.setLocation(
                                                 JdpPrincipal.getWidth()/2 - tela.getWidth()/2,
                                                 JdpPrincipal.getHeight()/2 - tela.getHeight()/2);
                                                  tela.setVisible(true);
                                         }
                   
        
 

        
}  
       } catch (Exception ex) {
           String msgErro1;
           msgErro1 = "Insira apenas uma virgula";
           JOptionPane.showMessageDialog(null, msgErro1);
       }
       
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     
    
    txtNomeT.setText("");
    txtConteudoT.setText("");
    txtCargaHorariaT.setText("");
    txtDataIninioT.setText("");
    txtDataTerminoT.setText("");
    txtValTreinamento.setText("");
    txtParcelasT.setText("");
    txtObsT.setText("");
        
        
    }//GEN-LAST:event_jButton3ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtCargaHorariaT;
    private javax.swing.JTextField txtConteudoT;
    private javax.swing.JFormattedTextField txtDataIninioT;
    private javax.swing.JFormattedTextField txtDataTerminoT;
    private javax.swing.JTextField txtNomeT;
    private javax.swing.JTextField txtObsT;
    private javax.swing.JTextField txtParcelasT;
    private javax.swing.JTextField txtValTreinamento;
    // End of variables declaration//GEN-END:variables
}
