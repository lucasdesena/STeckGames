/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stecgames.visão;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import stecgames.modelo.ClienteFisico;
import stecgames.modelo.ClienteJuridico;
import stecgames.modelo.Vendas;
import stecgames.persistencia.ClienteFisicoDAO;
import stecgames.persistencia.ClienteJuridicoDAO;
import stecgames.persistencia.VendasDAO;
import static stecgames.visão.TelaPrincipal.JdpPrincipal;

/**
 *
 * @author Christopher Soares
 */
public class ListarClientesTela extends javax.swing.JInternalFrame {

    /**
     * Creates new form NewJFrame
     */
    
    ClienteJuridicoEditar pegarTudo;
    ClienteFisicoTelaEditar pegarAll;
    NovaVenda pegarIDD;
    
    public ListarClientesTela() {
        initComponents();       
        LerTabelaFisico();
        LerTabelaJuridico();
    }
    public void  LerTabelaFisico(){
        
        DefaultTableModel modelo = (DefaultTableModel) jTableFisico.getModel();
        modelo.setNumRows(0);
         
        ArrayList<ClienteFisico> lista = null;
         
        try{
           lista = ClienteFisicoDAO.listarClienteFisico();
        }catch(Exception e){
           JOptionPane.showMessageDialog(null, "Falhou.");
        }
          
        for(ClienteFisico CF:lista){
      
        modelo.addRow(new Object[]{
        
           CF.getIdClienteFisico(),
           CF.getNome(),
           CF.getCPF()
                 
     });     
    }     
    }
    
    public void  LerTabelaJuridico(){
        
         DefaultTableModel modelo = (DefaultTableModel) jTableJuridico.getModel();
         modelo.setNumRows(0);
         
        ArrayList<ClienteJuridico> lista = null;
         
        try{
           lista = ClienteJuridicoDAO.listarClienteJuridico();
        }catch(Exception e){
           JOptionPane.showMessageDialog(null, "Falhou.");
        }
          
        for(ClienteJuridico Cj:lista){
      
        modelo.addRow(new Object[]{
        
           Cj.getIdClienteJuridico(),
           Cj.getRazao(),
           Cj.getCNPJ()
                 
     });     
    }     
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelListaFisico = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableFisico = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableJuridico = new javax.swing.JTable();
        btExcluir = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        btSelecionar = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Lista de Clientes Cadastrados");

        jPanelListaFisico.setBorder(javax.swing.BorderFactory.createTitledBorder("Clientes Fisicos"));

        jTableFisico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOME", "CPF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableFisico.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableFisico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableFisicoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableFisico);
        if (jTableFisico.getColumnModel().getColumnCount() > 0) {
            jTableFisico.getColumnModel().getColumn(0).setResizable(false);
            jTableFisico.getColumnModel().getColumn(1).setResizable(false);
            jTableFisico.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanelListaFisicoLayout = new javax.swing.GroupLayout(jPanelListaFisico);
        jPanelListaFisico.setLayout(jPanelListaFisicoLayout);
        jPanelListaFisicoLayout.setHorizontalGroup(
            jPanelListaFisicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListaFisicoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelListaFisicoLayout.setVerticalGroup(
            jPanelListaFisicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListaFisicoLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Clientes Jurídicos"));

        jTableJuridico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "RAZÃO SOCIAL", "CNPJ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableJuridico.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableJuridico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableJuridicoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableJuridico);
        if (jTableJuridico.getColumnModel().getColumnCount() > 0) {
            jTableJuridico.getColumnModel().getColumn(0).setResizable(false);
            jTableJuridico.getColumnModel().getColumn(1).setResizable(false);
            jTableJuridico.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        btSelecionar.setText("Selecionar");
        btSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelecionarActionPerformed(evt);
            }
        });

        btVoltar.setText("Voltar");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelListaFisico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btSelecionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(btVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelListaFisico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        if(jTableFisico.getSelectedRow() != -1){
        int resposta = JOptionPane.showConfirmDialog(null, "Deseja excluir o usuário selecionado ?", "Confirmação", JOptionPane.YES_NO_OPTION); 
        if (resposta == JOptionPane.YES_OPTION) {
        String idAux = jTableFisico.getValueAt(jTableFisico.getSelectedRow(), 0).toString();
        int id = Integer.parseInt(idAux);
        
        ClienteFisico CF = new ClienteFisico();
        
        CF.setIdClienteFisico(id);
        
        try{
            ClienteFisicoDAO.excluir(CF);
            LerTabelaFisico();
            }catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao Excluir.");
            }
        }
        }else if(jTableJuridico.getSelectedRow() != -1){ 
        int resposta = JOptionPane.showConfirmDialog(null, "Deseja excluir o usuário selecionado ?", "Confirmação", JOptionPane.YES_NO_OPTION); 
        if (resposta == JOptionPane.YES_OPTION) {
        String idAuxi = jTableJuridico.getValueAt(jTableJuridico.getSelectedRow(), 0).toString();
        int id2 = Integer.parseInt(idAuxi);
        
        ClienteJuridico CJ = new ClienteJuridico();
        CJ.setIdClienteJuridico(id2);
        
        try{
            ClienteJuridicoDAO.excluir(CJ);
            JOptionPane.showMessageDialog(null, "Usuário excluido com sucesso!");
            LerTabelaJuridico();
            }catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Falha ao Excluir.");
            }
        }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione algum usuário para Excluir");
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelecionarActionPerformed
        if(jTableFisico.getSelectedRow() != -1){
            
            String idAux = jTableFisico.getValueAt(jTableFisico.getSelectedRow(), 0).toString();
            int id = Integer.parseInt(idAux);   
            
        if(pegarIDD == null){ 
            pegarIDD = new NovaVenda();
            
                 JdpPrincipal.add(pegarIDD);
                 pegarIDD.setLocation(
                 JdpPrincipal.getWidth()/2 - pegarIDD.getWidth()/2,
                 JdpPrincipal.getHeight()/2 - pegarIDD.getHeight()/2);
                 pegarIDD.setVisible(true);
            
        try{
            
        ClienteFisico cf = new ClienteFisico();
        
        cf = ClienteFisicoDAO.buscar(id);
        
        pegarIDD.recebe(jTableFisico.getValueAt(jTableFisico.getSelectedRow(), 0).toString(), cf.getTipoCliente());
        
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Falhou.");
        }     
        }else{
        pegarIDD.setVisible(true);
        }
        try{
  
         ClienteFisico cf = new ClienteFisico();
        
         cf = ClienteFisicoDAO.buscar(id);
        
         pegarIDD.recebe(jTableFisico.getValueAt(jTableFisico.getSelectedRow(), 0).toString(), cf.getTipoCliente());
        
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Falhou.");
        }
        
        }else if(jTableJuridico.getSelectedRow() != -1){  
            
        String idAuxi = jTableJuridico.getValueAt(jTableJuridico.getSelectedRow(), 0).toString();
        int ide = Integer.parseInt(idAuxi);
        
        if(pegarIDD == null){
            
            pegarIDD = new NovaVenda();
             JdpPrincipal.add(pegarIDD);
             
                 pegarIDD.setLocation(
                 JdpPrincipal.getWidth()/2 - pegarIDD.getWidth()/2,
                 JdpPrincipal.getHeight()/2 - pegarIDD.getHeight()/2);
                 pegarIDD.setVisible(true);
            
        try{
            
        ClienteJuridico cj = new ClienteJuridico();
        
        cj = ClienteJuridicoDAO.buscar(ide);
        
        pegarIDD.recebe(jTableJuridico.getValueAt(jTableJuridico.getSelectedRow(), 0).toString(), cj.getTipoCliente());
        
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Falhou.");
        }
         }else{
        pegarIDD.setVisible(true);
        }
        try{
       
        ClienteJuridico cj = new ClienteJuridico();
        
        cj = ClienteJuridicoDAO.buscar(ide);
        
         pegarIDD.recebe(jTableJuridico.getValueAt(jTableJuridico.getSelectedRow(), 0).toString(), cj.getTipoCliente());
        
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Falhou.");
        }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione algum usuário para prosseguir!");
        }
        
        dispose();
    }//GEN-LAST:event_btSelecionarActionPerformed

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja cancelar essa operação?", "Cancelar Operação", JOptionPane.YES_NO_OPTION);
        if(resposta == JOptionPane.YES_OPTION){
            dispose();
        }
    }//GEN-LAST:event_btVoltarActionPerformed

    private void jTableFisicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableFisicoMouseClicked

        jTableJuridico.setRowSelectionAllowed(false);
        jTableFisico.setRowSelectionAllowed(true);
    }//GEN-LAST:event_jTableFisicoMouseClicked

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        if(jTableFisico.getSelectedRow() != -1){
            String idAux = jTableFisico.getValueAt(jTableFisico.getSelectedRow(), 0).toString();
            int id = Integer.parseInt(idAux);        
        
        if(pegarAll == null){
            pegarAll = new ClienteFisicoTelaEditar();
            pegarAll.setVisible(true);     
        
        try{
            
        ClienteFisico cf = new ClienteFisico();
        
        cf = ClienteFisicoDAO.buscar(id);
        
        pegarAll.recebe2(cf.getNome(), cf.getEmail(), cf.getSexo(), cf.getIdade(), cf.getTelefone(), cf.getCPF(), cf.getRG(), cf.getDataNasc(), cf.getPais(), cf.getEstado(), cf.getCidade(), cf.getCEP(), cf.getBairro(), cf.getRua(), cf.getComplemento(), cf.getNumero());
        
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Falhou.");
        }     
        }else{
        pegarAll.setVisible(true);
        }
        try{
  
         ClienteFisico cf = new ClienteFisico();
        
         cf = ClienteFisicoDAO.buscar(id);
        
         pegarAll.recebe2(cf.getNome(), cf.getEmail(), cf.getSexo(),cf.getIdade(), cf.getTelefone(), cf.getCPF(), cf.getRG(), cf.getDataNasc(), cf.getPais(), cf.getEstado(), cf.getCidade(), cf.getCEP(), cf.getBairro(), cf.getRua(), cf.getComplemento(), cf.getNumero());
         ClienteFisicoTelaEditar frame = new ClienteFisicoTelaEditar();
         frame.setVisible(true); 
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Falhou.");
        }
        }else if(jTableJuridico.getSelectedRow() != -1){   
        String idAuxi = jTableJuridico.getValueAt(jTableJuridico.getSelectedRow(), 0).toString();
        int ide = Integer.parseInt(idAuxi);
       
        
         if(pegarTudo == null){
            pegarTudo = new ClienteJuridicoEditar();
            pegarTudo.setVisible(true);
            
        try{
            
        ClienteJuridico cj = new ClienteJuridico();
        
        cj = ClienteJuridicoDAO.buscar(ide);
        
        pegarTudo.recebe(cj.getCNPJ(), cj.getIE(), cj.getRazao(), cj.getEndereco(), cj.getNumero(), cj.getComplemento(), cj.getCEP(), cj.getTelefone(), cj.getBairro(), cj.getCidade());
        
        }catch(Exception ex){
            
            JOptionPane.showMessageDialog(null, "Falhou.");
        }
        }else{
        pegarTudo.setVisible(true);
        }
        try{
       
        ClienteJuridico cj = new ClienteJuridico();
        
        cj = ClienteJuridicoDAO.buscar(ide);
        
        pegarTudo.recebe(cj.getCNPJ(), cj.getIE(), cj.getRazao(), cj.getEndereco(), cj.getNumero(), cj.getComplemento(), cj.getCEP(), cj.getTelefone(), cj.getBairro(), cj.getCidade());
        ClienteJuridicoEditar frame = new ClienteJuridicoEditar();
        frame.setVisible(true);
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Falhou.");
        }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um usuário para editar.");
        }
    }//GEN-LAST:event_btEditarActionPerformed

    private void jTableJuridicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableJuridicoMouseClicked

        jTableJuridico.setRowSelectionAllowed(true);
        jTableFisico.setRowSelectionAllowed(false);
    }//GEN-LAST:event_jTableJuridicoMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btSelecionar;
    private javax.swing.JButton btVoltar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelListaFisico;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableFisico;
    private javax.swing.JTable jTableJuridico;
    // End of variables declaration//GEN-END:variables
}
